// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TempleSignup_Mission12_.Models;

namespace TempleSignup_Mission12_.Migrations
{
    [DbContext(typeof(AppointmentContext))]
    partial class AppointmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("TempleSignup_Mission12_.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Slots")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AppointmentId");

                    b.HasIndex("TimeId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentId = 1,
                            Date = "3/21/2022",
                            Location = "Layton Temple Visitors Center",
                            Slots = 10,
                            TimeId = 1
                        },
                        new
                        {
                            AppointmentId = 2,
                            Date = "3/22/2022",
                            Location = "Layton Temple Visitors Center",
                            Slots = 10,
                            TimeId = 2
                        },
                        new
                        {
                            AppointmentId = 3,
                            Date = "3/22/2022",
                            Location = "Layton Temple Visitors Center",
                            Slots = 20,
                            TimeId = 3
                        });
                });

            modelBuilder.Entity("TempleSignup_Mission12_.Models.SignUp", b =>
                {
                    b.Property<int>("SignUpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("SignUpId");

                    b.HasIndex("AppointmentId");

                    b.ToTable("SignUps");
                });

            modelBuilder.Entity("TempleSignup_Mission12_.Models.Times", b =>
                {
                    b.Property<int>("TimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TimeSlot")
                        .HasColumnType("TEXT");

                    b.HasKey("TimeId");

                    b.ToTable("Times");

                    b.HasData(
                        new
                        {
                            TimeId = 1,
                            TimeSlot = "8:00am-9:00am"
                        },
                        new
                        {
                            TimeId = 2,
                            TimeSlot = "9:00am-10:00am"
                        },
                        new
                        {
                            TimeId = 3,
                            TimeSlot = "10:00am-11:00am"
                        },
                        new
                        {
                            TimeId = 4,
                            TimeSlot = "11:00am-12:00pm"
                        },
                        new
                        {
                            TimeId = 5,
                            TimeSlot = "12:00pm-1:00pm"
                        },
                        new
                        {
                            TimeId = 6,
                            TimeSlot = "1:00pm-2:00pm"
                        },
                        new
                        {
                            TimeId = 7,
                            TimeSlot = "2:00pm-3:00pm"
                        },
                        new
                        {
                            TimeId = 8,
                            TimeSlot = "3:00pm-4:00pm"
                        },
                        new
                        {
                            TimeId = 9,
                            TimeSlot = "4:00pm-5:00pm"
                        },
                        new
                        {
                            TimeId = 10,
                            TimeSlot = "5:00pm-6:00pm"
                        },
                        new
                        {
                            TimeId = 11,
                            TimeSlot = "6:00pm-7:00pm"
                        },
                        new
                        {
                            TimeId = 12,
                            TimeSlot = "7:00pm-8:00pm"
                        });
                });

            modelBuilder.Entity("TempleSignup_Mission12_.Models.Appointment", b =>
                {
                    b.HasOne("TempleSignup_Mission12_.Models.Times", "Time")
                        .WithMany()
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TempleSignup_Mission12_.Models.SignUp", b =>
                {
                    b.HasOne("TempleSignup_Mission12_.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
